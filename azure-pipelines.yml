trigger:
- master

pool:
  vmImage: 'vs2017-win2016'

steps:
- script: echo Starting build pipeline!
  displayName: 'Hello from Albanian Xrm'

- powershell: echo "##vso[task.setvariable variable=configuration;isOutput=true]$(IF($env:BRANCH -eq "refs/heads/master"){"Azure Pipelines"}else{"release"})"
  name: MyVars
  env: 
    BRANCH: $(Build.SourceBranch)
  displayName: 'Set Configuration Variable'
  
- task: NuGetToolInstaller@0
  inputs:
    versionSpec: '4.9.x' 
  displayName: 'Install NuGet 4.9.x'

- task: NuGetCommand@2
  displayName: 'Restoring NuGet packages'
  inputs:
    command: 'restore'
    restoreSolution: '**/*.sln'
    feedsToUse: 'select'

- task: DownloadSecureFile@1
  name: TestSignKey 
  inputs:
    secureFile: 'AlbanianXrm.Tests.snk'
  condition: eq(variables['Build.SourceBranch'], 'refs/heads/master')  
  displayName: 'Tests Secret'

- task: DownloadSecureFile@1
  name: SignKey 
  inputs:
    secureFile: 'AlbanianXrm.EarlyBound.snk'
  condition: eq(variables['Build.SourceBranch'], 'refs/heads/master')  
  displayName: 'Secret'

- task: DownloadSecureFile@1
  name: MyPlugin 
  inputs:
    secureFile: 'MyPlugin.cs'
  condition: eq(variables['Build.SourceBranch'], 'refs/heads/master')  
  displayName: 'Syncfusion Secret'

- powershell: echo "##vso[task.setvariable variable=Path;isOutput=true]$((get-item $env:SECURE_FILE).Directory.FullName)"
  name: secretFolder
  env:
    Secure_File: $(TestSignKey.secureFilePath)
  condition: eq(variables['Build.SourceBranch'], 'refs/heads/master')  
  displayName: 'Secret folder'

- task: CopyFiles@2
  inputs:
    sourceFolder: $(secretFolder.Path)
    contents: 'AlbanianXrm.Tests.snk' 
    targetFolder: 'AlbanianXrm.CrmSvcUtilExtensions.Tests'
    overWrite: true 
  condition: eq(variables['Build.SourceBranch'], 'refs/heads/master')  
  displayName: 'Overwrite AlbanianXrm.CrmSvcUtilExtensions.Tests SignKey'

- task: CopyFiles@2
  inputs:
    sourceFolder: $(secretFolder.Path)
    contents: 'AlbanianXrm.EarlyBound.snk' 
    targetFolder: 'AlbanianXrm.CrmSvcUtilExtensions'
    overWrite: true 
  condition: eq(variables['Build.SourceBranch'], 'refs/heads/master')  
  displayName: 'Overwrite AlbanianXrm.CrmSvcUtilExtensions SignKey'

- task: CopyFiles@2
  inputs:
    sourceFolder: $(secretFolder.Path)
    contents: 'MyPlugin.cs' 
    targetFolder: 'AlbanianXrm.EarlyBound'
    overWrite: true 
  condition: eq(variables['Build.SourceBranch'], 'refs/heads/master')  
  displayName: 'Overwrite AlbanianXrm.EarlyBound Syncfusion Secret'

- task: MSBuild@1
  inputs:
    solution: '**/*.sln'
    configuration: $(MyVars.configuration)
  displayName: 'Building Solution'

- task: VSTest@2
  inputs:
    testSelector: 'testAssemblies'
    testAssemblyVer2: |
      **\*Tests.dll
      !**\*TestAdapter.dll
      !**\obj\**
    searchFolder: '$(System.DefaultWorkingDirectory)'
    codeCoverageEnabled: true
    testRunTitle: 'Unit Tests'
    platform: 'AnyCPU'
    configuration: $(MyVars.configuration)
  displayName: 'Running unit tests'

- task: NuGetCommand@2
  displayName: 'Creating NuGet package'
  inputs:
    command: 'pack'
    packagesToPack: '**/*.nuspec'
    packDestination: '$(Build.ArtifactStagingDirectory)'
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))  

- task: PublishBuildArtifacts@1
  displayName: 'Publishing NuGet package to pipeline'
  inputs:
    pathtoPublish: '$(Build.ArtifactStagingDirectory)'
    artifactName: 'NuGet Package'
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))  
